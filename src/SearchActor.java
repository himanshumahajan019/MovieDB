
import com.mashape.unirest.http.HttpResponse;
import com.mashape.unirest.http.Unirest;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.util.StringTokenizer;
import javax.imageio.ImageIO;
import javax.sound.sampled.AudioInputStream;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
import org.json.JSONArray;
import org.json.JSONObject;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author Pratham Saroch
 */
public class SearchActor extends javax.swing.JFrame {

    String test = "";

    /**
     * Creates new form SearchActor
     */
    public SearchActor(String var) {
        initComponents();

        setSize(950, 550);
        setLocationRelativeTo(null);
        getContentPane().setBackground(Color.BLACK);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        dispose();
        jLabel1.setHorizontalAlignment(SwingConstants.CENTER);
        if (var.equals("Search Actor")) {
            jLabel1.setText("Search Actor");
            test = "Search Actor";
        } else if (var.equals("Search Movie")) {
            jLabel1.setText("Search Movie");
            test = "Search Movie";
        } else if (var.equals("Search TV Show")) {
            jLabel1.setText("Search TV Show");
            test = "Search TV Show";
        } else if (var.equals("Search Movie House")) {
            jLabel1.setText("Search Movie House");
            test = "Search Movie House";
        } else if (var.equals("favmovies")) {
            jLabel1.setText("Your Favourite Movies");
            String ans = MyClient.renderFavMovies();
            renderFavMovie(ans);
            jTextField1.setVisible(false);
            jButton1.setVisible(false);
        } else if (var.equals("favtv")) {
            jLabel1.setText("Your Favourite TV");
            String ans = MyClient.renderFavTV();
            renderFavTV(ans);
            jTextField1.setVisible(false);
            jButton1.setVisible(false);
        } else {
            jTextField1.setVisible(false);
            jButton1.setVisible(false);
            jLabel1.setText("All Categories");
            String ans = MyClient.searchMulti(var);

            renderMulti(ans);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Search Actor");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(300, 0, 450, 48);

        jTextField1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1);
        jTextField1.setBounds(250, 50, 250, 50);

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(570, 60, 110, 30);

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 898, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 388, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(jPanel1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(20, 110, 900, 390);

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(10, 10, 80, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (test.equals("Search Actor")) {
            String actorname = jTextField1.getText();
            actorname = actorname.replace(" ", "%20");
            String ans = MyClient.searchActor(actorname);
            renderActorMovies(ans);
        } else if (test.equals("Search Movie")) {
            String movie = jTextField1.getText();
            movie = movie.replace(" ", "%20");
            String ans = MyClient.searchMovie(movie);
            renderMovies(ans);
        } else if (test.equals("Search TV Show")) {
            String tv = jTextField1.getText();
            tv = tv.replace(" ", "%20");
            String ans = MyClient.searchTVShow(tv);
            renderTV(ans);
        } else if (test.equals("Search Movie House")) {
            String house = jTextField1.getText();
            house = house.replace(" ", "%20");
            String ans = MyClient.searchMovieHouse(house);
            renderHouse(ans);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        Welcome obj = new Welcome();
        obj.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

//    For Search Actor
    void renderActorMovies(String ans) {
        int count = 0;
        JSONObject mainobj = new JSONObject(ans);
        JSONArray mainarr = mainobj.getJSONArray("results");
        int x = 20;
        for (int i = 0; i < mainarr.length(); i++) {

//            Why This Code Did not Work Work ?
//            JSONObject subobj = arr.getJSONObject(arr.getInt(i));
            JSONObject subobj = (JSONObject) mainarr.get(i);
            System.out.println(subobj.get("known_for_department"));
//            UpcomingMovieDesign2 obj = new UpcomingMovieDesign2();

            System.out.println("-----------");
            JSONArray subarr = subobj.getJSONArray("known_for");

            for (int j = 0; j < subarr.length(); j++) {
                if (subobj.get("known_for_department").equals("Directing")) {
                    continue;
                }
                JSONObject subsubobj = (JSONObject) subarr.get(j);
                System.out.println(subsubobj.get("title"));
                String title = subsubobj.get("title").toString();
                String release_date = subsubobj.get("release_date").toString();
                String poster_path = subsubobj.get("poster_path").toString();
                String overviewString = subsubobj.get("overview").toString();
                String overview = "";
                String[] n = overviewString.split("(?<=\\G.{" + 39 + "})");
                for (String string : n) {
                    overview += string + " " + "\n" + " ";
                }

                String photo = subsubobj.get("poster_path").toString();
                int id = subsubobj.getInt("id");
                int vote = (int) subsubobj.get("vote_count");
                UpcomingMovieDesign2 obj1 = new UpcomingMovieDesign2();

//                obj1.jLabel1.setText(poster_path);
                String res = MyClient.checkButton(id);
                if (res.equals("success")) {
                    obj1.jButton1.setText("Added");
                }

                obj1.jProgressBar1.setString("Votes : " + vote);
                obj1.jProgressBar1.setValue(vote);
                obj1.jTextArea1.setText(overview);
                try {
                    BufferedImage bi = ImageIO.read(new URL("https://image.tmdb.org/t/p/w200" + photo));

                    bi = scale(bi, 160, 150);

                    obj1.jLabel1.setIcon(new ImageIcon(bi));

                } catch (Exception e) {
                    e.printStackTrace();
                }

                obj1.jButton1.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {

                        String ans = MyClient.addUpcomingToFav(id);

                        if (ans.equals("add")) {
                            obj1.jButton1.setText("Added");
                        } else {
                            obj1.jButton1.setText("Add");
                        }

                    }
                });

                obj1.jLabel2.setText(title);
                obj1.jLabel3.setText(release_date);

                obj1.setBounds(x, 20, 280, 340);
                x = x + 330;
                jPanel1.add(obj1);
                jPanel1.repaint();
                obj1.repaint();

                count = count + 1;
            }
            jPanel1.setPreferredSize(new Dimension(330 * count, 400));
            System.out.println(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>");
        }

    }

//    For Search Movies
    void renderMovies(String ans) {
        int count = 0;
        int x = 20;
        JSONObject mainobj = new JSONObject(ans);
        System.out.println("Mainobj " + mainobj);

//        Why this  is not working ?
//        JSONArray mainarr = new JSONArray("results");
//        Why This is Working ?
        JSONArray mainarr = mainobj.getJSONArray("results");

        System.out.println("Main Array " + mainarr);
        for (int i = 0; i < mainarr.length(); i++) {

//            Why This Cod Dose'nt Work ?
//            JSONObject subobj = new JSONObject(mainarr.get(i));
//            Why this Code Works ?
            JSONObject subobj = (JSONObject) mainarr.get(i);

            String title = subobj.getString("title");
            String release_date = subobj.get("release_date").toString();
            String poster_path = subobj.get("poster_path").toString();
            String overviewString = subobj.get("overview").toString();
            String overview = "";
            String[] n = overviewString.split("(?<=\\G.{" + 39 + "})");
            for (String string : n) {
                overview += string + " " + "\n" + " ";
            }

            String photo = subobj.get("poster_path").toString();
            int id = subobj.getInt("id");
            int vote = (int) subobj.get("vote_count");
            UpcomingMovieDesign2 obj1 = new UpcomingMovieDesign2();

            String res = MyClient.checkButton(id);
            if (res.equals("success")) {
                obj1.jButton1.setText("Added");
            }

            obj1.jProgressBar1.setString("Votes : " + vote);
            obj1.jProgressBar1.setValue(vote);
            obj1.jTextArea1.setText(overview);
            try {
                BufferedImage bi = ImageIO.read(new URL("https://image.tmdb.org/t/p/w200" + photo));

                bi = scale(bi, 160, 150);

                obj1.jLabel1.setIcon(new ImageIcon(bi));

            } catch (Exception e) {
                e.printStackTrace();
            }

            obj1.jButton1.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {

                    String ans = MyClient.addUpcomingToFav(id);

                    if (ans.equals("add")) {
                        obj1.jButton1.setText("Added");
                    } else {
                        obj1.jButton1.setText("Add");
                    }

                }
            });

            obj1.jLabel2.setText(title);
            obj1.jLabel3.setText(release_date);

            obj1.setBounds(x, 20, 280, 340);
            x = x + 330;
            jPanel1.add(obj1);
            jPanel1.repaint();
            obj1.repaint();

            count = count + 1;
            System.out.println(title);
        }
        jPanel1.setPreferredSize(new Dimension(330 * count, 400));
    }

//    For Search TV Show.
    void renderTV(String ans) {
        int count = 0;
        int x = 20;
        JSONObject mainobj = new JSONObject(ans);
        JSONArray mainarr = mainobj.getJSONArray("results");

        for (int i = 0; i < mainarr.length(); i++) {
            JSONObject subobj = (JSONObject) mainarr.get(i);
            String name = subobj.getString("name");
            String first_air_date = subobj.get("first_air_date").toString();
            String poster_path = subobj.get("poster_path").toString();
            String overviewString = subobj.get("overview").toString();
            String overview = "";
            String[] n = overviewString.split("(?<=\\G.{" + 39 + "})");
            for (String string : n) {
                overview += string + " " + "\n" + " ";
            }

            int id = subobj.getInt("id");
            int vote = (int) subobj.get("vote_count");
            UpcomingMovieDesign2 obj1 = new UpcomingMovieDesign2();

            String res = MyClient.checkButtonTv(id);
            if (res.equals("success")) {
                obj1.jButton1.setText("Added");
            }

            obj1.jProgressBar1.setString("Votes : " + vote);
            obj1.jProgressBar1.setValue(vote);
            obj1.jTextArea1.setText(overview);
            try {
                BufferedImage bi = ImageIO.read(new URL("https://image.tmdb.org/t/p/w200" + poster_path));

                bi = scale(bi, 160, 150);

                obj1.jLabel1.setIcon(new ImageIcon(bi));

            } catch (Exception e) {
                e.printStackTrace();
            }

            obj1.jButton1.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {

                    String ans = MyClient.addTvToFav(id);

                    if (ans.equals("add")) {
                        obj1.jButton1.setText("Added");
                    } else {
                        obj1.jButton1.setText("Add");
                    }

                }
            });

            obj1.jLabel2.setText(name);
            obj1.jLabel3.setText(first_air_date);

            obj1.setBounds(x, 20, 280, 340);
            x = x + 330;
            jPanel1.add(obj1);
            jPanel1.repaint();
            obj1.repaint();

            count = count + 1;
            System.out.println(name);
        }
        jPanel1.setPreferredSize(new Dimension(330 * count, 400));
    }

//    For Search Movie House
    void renderHouse(String ans) {
        int count = 0;
        int x = 20;
        JSONObject mainobj = new JSONObject(ans);
        JSONArray mainarr = mainobj.getJSONArray("results");
        String res = "";
        for (int i = 0; i < mainarr.length(); i++) {
            JSONObject subobj = (JSONObject) mainarr.get(i);

            String photo = subobj.getString("logo_path");
            String name = subobj.getString("name");

            MovieHouseDesign2 obj2 = new MovieHouseDesign2();

            obj2.jLabel2.setText(name);

            try {

                BufferedImage bi = ImageIO.read(new URL("https://image.tmdb.org/t/p/w200" + photo));

                bi = scale(bi, 200, 170);

                obj2.jLabel1.setIcon(new ImageIcon(bi));
            } catch (Exception e) {
                e.printStackTrace();
            }
            obj2.setBounds(x, 20, 280, 340);
            x = x + 330;
            obj2.repaint();
            jPanel1.add(obj2);
            jPanel1.repaint();
            count++;
        }
        jPanel1.setPreferredSize(new Dimension(count * 330, 400));
    }

//    For Render Fav Movies
    void renderFavMovie(String ans) {
        int flag = 0;
        int x = 20;
        StringTokenizer st = new StringTokenizer(ans, ";");
        int count = st.countTokens();
        String api = "980d96176457a6e65b8bc282bcadccd4";
        for (int i = 0; i < count; i++) {
            int id = Integer.parseInt(st.nextToken());
            try {
                HttpResponse<String> response = Unirest.get("https://api.themoviedb.org/3/movie/" + id + "?api_key=" + api + "&language=en-US").asString();

                if (response.getStatus() == 200) {
                    String body = response.getBody();

                    JSONObject obj = new JSONObject(body);

                    String title = obj.getString("title");
                    String release_date = obj.get("release_date").toString();
                    String poster_path = obj.get("poster_path").toString();
                    String overviewString = obj.get("overview").toString();
                    String overview = "";
                    String[] n = overviewString.split("(?<=\\G.{" + 39 + "})");
                    for (String string : n) {
                        overview += string + " " + "\n" + " ";
                    }

                    String photo = obj.get("poster_path").toString();
                    int vote = (int) obj.get("vote_count");

                    UpcomingMovieDesign2 obj1 = new UpcomingMovieDesign2();
                    obj1.jProgressBar1.setString("Votes : " + vote);
                    obj1.jProgressBar1.setValue(vote);
                    obj1.jTextArea1.setText(overview);

                    String res = MyClient.checkButton(id);
                    if (res.equals("success")) {
                        obj1.jButton1.setText("Added");
                    }

                    try {
                        BufferedImage bi = ImageIO.read(new URL("https://image.tmdb.org/t/p/w200" + photo));

                        bi = scale(bi, 160, 150);

                        obj1.jLabel1.setIcon(new ImageIcon(bi));

                    } catch (Exception e) {
                        e.printStackTrace();
                    }

                    obj1.jButton1.addActionListener(new ActionListener() {
                        @Override
                        public void actionPerformed(ActionEvent e) {

                            String ans = MyClient.addUpcomingToFav(id);

                            if (ans.equals("add")) {
                                obj1.jButton1.setText("Added");
                            } else {
                                obj1.jButton1.setText("Add");
                            }

                        }
                    });

                    obj1.jLabel2.setText(title);
                    obj1.jLabel3.setText(release_date);

                    obj1.setBounds(x, 20, 280, 340);
                    x = x + 330;
                    jPanel1.add(obj1);
                    jPanel1.repaint();
                    obj1.repaint();

                    System.out.println(title);
                    flag = flag + 1;
                }

            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        jPanel1.setPreferredSize(new Dimension(330 * flag, 400));
    }

    //    For Render Fav TV
    void renderFavTV(String ans) {
        int flag = 0;
        int x = 20;
        StringTokenizer st = new StringTokenizer(ans, ";");
        int count = st.countTokens();
        String api = "980d96176457a6e65b8bc282bcadccd4";
        for (int i = 0; i < count; i++) {
            int id = Integer.parseInt(st.nextToken());
            try {
                HttpResponse<String> response = Unirest.get("https://api.themoviedb.org/3/tv/" + id + "?api_key=" + api + "&language=en-US").asString();

                if (response.getStatus() == 200) {
                    String body = response.getBody();

                    JSONObject obj = new JSONObject(body);

                    String title = obj.getString("name");
                    String release_date = obj.get("first_air_date").toString();
                    String poster_path = obj.get("poster_path").toString();
                    String overviewString = obj.get("overview").toString();
                    String overview = "";
                    String[] n = overviewString.split("(?<=\\G.{" + 39 + "})");
                    for (String string : n) {
                        overview += string + " " + "\n" + " ";
                    }

                    String photo = obj.get("poster_path").toString();

                    UpcomingMovieDesign2 obj1 = new UpcomingMovieDesign2();
//                obj1.jProgressBar1.setString("Votes : " + vote);
//                obj1.jProgressBar1.setValue(vote);
                    obj1.jTextArea1.setText(overview);

                    String res = MyClient.checkButtonTv(id);
                    if (res.equals("success")) {
                        obj1.jButton1.setText("Added");
                    }

                    try {
                        BufferedImage bi = ImageIO.read(new URL("https://image.tmdb.org/t/p/w200" + photo));

                        bi = scale(bi, 160, 150);

                        obj1.jLabel1.setIcon(new ImageIcon(bi));

                    } catch (Exception e) {
                        e.printStackTrace();
                    }

                    obj1.jButton1.addActionListener(new ActionListener() {
                        @Override
                        public void actionPerformed(ActionEvent e) {

                            String ans = MyClient.addTvToFav(id);

                            if (ans.equals("add")) {
                                obj1.jButton1.setText("Added");
                            } else {
                                obj1.jButton1.setText("Add");
                            }

                        }
                    });

                    obj1.jLabel2.setText(title);
                    obj1.jLabel3.setText(release_date);

                    obj1.setBounds(x, 20, 280, 340);
                    x = x + 330;
                    jPanel1.add(obj1);
                    jPanel1.repaint();
                    obj1.repaint();

                    System.out.println(title);
                    flag = flag + 1;
                }

            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        jPanel1.setPreferredSize(new Dimension(330 * flag, 400));
    }

//    For Multi Search
    void renderMulti(String ans) {
        int count = 0;
        int x = 20;
        JSONObject mainobj = new JSONObject(ans);
        System.out.println("Mainobj " + mainobj);

//        Why this  is not working ?
//        JSONArray mainarr = new JSONArray("results");
//        Why This is Working ?
        JSONArray mainarr = mainobj.getJSONArray("results");

        System.out.println("Main Array " + mainarr);
        for (int i = 0; i < mainarr.length(); i++) {

//            Why This Cod Dose'nt Work ?
//            JSONObject subobj = new JSONObject(mainarr.get(i));
//            Why this Code Works ?
            JSONObject subobj = (JSONObject) mainarr.get(i);

            boolean a = subobj.has("name");
            String title = "";
            if (a) {
                title = subobj.getString("name");
            } else {
                title = subobj.getString("title");
            }

            boolean b = subobj.has("release_date");
            String release_date = "";
            if (b) {
                release_date = subobj.get("release_date").toString();
            } else {
                release_date = "Not Fount";
            }

            boolean c = subobj.has("poster_path");
            String poster_path = "";
            if (c) {
                poster_path = subobj.get("poster_path").toString();
            } else {
                poster_path = "Not Found";
            }

            boolean d = subobj.has("overview");
            String overviewString = "";
            if (d) {
                overviewString = subobj.get("overview").toString();
            } else {
                overviewString = "Information not found";
            }
            String overview = "";
            String[] n = overviewString.split("(?<=\\G.{" + 39 + "})");
            for (String string : n) {
                overview += string + " " + "\n" + " ";
            }

            boolean h = subobj.has("poster_path");
            String photo = "";
            if (h) {
                photo = subobj.get("poster_path").toString();
            } else {
                photo = "Information Not Available";
            }
            
            boolean f = subobj.has("id");
            int id = 0;
            if (f) {
                id = (int) subobj.get("id");
            } else {
                id = 0;
            }
            
            boolean g = subobj.has("vote_count");
            int vote = 0;
            if (g) {
                vote = (int) subobj.get("vote_count");
            } else {
                vote = 0;
            }

            UpcomingMovieDesign2 obj1 = new UpcomingMovieDesign2();

//            String res = MyClient.checkButton(id);
//                if (res.equals("success")) {
//                    obj1.jButton1.setText("Added");
//                }
            obj1.jProgressBar1.setString("Votes : " + vote);
            obj1.jProgressBar1.setValue(vote);
            obj1.jTextArea1.setText(overview);
            try {
                BufferedImage bi = ImageIO.read(new URL("https://image.tmdb.org/t/p/w200" + photo));

                bi = scale(bi, 160, 150);

                obj1.jLabel1.setIcon(new ImageIcon(bi));

            } catch (IOException e) {
                e.printStackTrace();
            }
            obj1.jButton1.setVisible(false);
//                obj1.jButton1.addActionListener(new ActionListener() {
//                @Override
//                public void actionPerformed(ActionEvent e) {
//                    
//                    String ans = MyClient.addUpcomingToFav(id);
//                    
//                    if(ans.equals("add")){
//                        obj1.jButton1.setText("Added");
//                    }else{
//                        obj1.jButton1.setText("Add");
//                    }
//                    
//                }
//            });

            obj1.jLabel2.setText(title);
            obj1.jLabel3.setText(release_date);

            obj1.setBounds(x, 20, 280, 340);
            x = x + 330;
            jPanel1.add(obj1);
            jPanel1.repaint();
            obj1.repaint();

            count = count + 1;
            System.out.println(title);
        }
        jPanel1.setPreferredSize(new Dimension(330 * count, 400));
    }

    public static BufferedImage scale(BufferedImage src, int w, int h) {
        BufferedImage img
                = new BufferedImage(w, h, BufferedImage.TYPE_INT_RGB);
        int x, y;
        int ww = src.getWidth();
        int hh = src.getHeight();
        int[] ys = new int[h];
        for (y = 0; y < h; y++) {
            ys[y] = y * hh / h;
        }
        for (x = 0; x < w; x++) {
            int newX = x * ww / w;
            for (y = 0; y < h; y++) {
                int col = src.getRGB(newX, ys[y]);
                img.setRGB(x, y, col);
            }
        }
        return img;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SearchActor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SearchActor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SearchActor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SearchActor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SearchActor("").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
